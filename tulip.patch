From 68fa73b0257c43f46dd7b0628ac9179bb09f17e0 Mon Sep 17 00:00:00 2001
From: AlessandroMilani <alessandromilani2000@gmail.com>
Date: Fri, 5 May 2023 10:27:10 +0200
Subject: [PATCH 1/6] Implemented basic auth

---
 .env.example               |  2 ++
 services/api/configurations.py |  5 ++++-
 services/api/requirements.txt  |  2 ++
 services/api/webservice.py     | 26 +++++++++++++++++++++++++-
 4 files changed, 33 insertions(+), 2 deletions(-)

diff --git a/.env.example b/.env.example
index 6a6e59a..8ff4749 100644
--- a/.env.example
+++ b/.env.example
@@ -11,0 +11,2 @@
+#Pswd for basic auth
+PSWD = "password"
\ No newline at end of file
diff --git a/services/api/configurations.py b/services/api/configurations.py
index a39a800..6abfe5e 100755
--- a/services/api/configurations.py
+++ b/services/api/configurations.py
@@ -42,0 +42,3 @@
+
+# Added pswd for the basic auth
+pswd = os.getenv("TULIP_PSWD", "Tul1p")
diff --git a/services/api/requirements.txt b/services/api/requirements.txt
index 3f28156..b33a65d 100644
--- a/services/api/requirements.txt
+++ b/services/api/requirements.txt
@@ -2,3 +2,5 @@ Flask_Cors
 pymongo
 Flask
 requests
+werkzeug
+flask_httpauth
\ No newline at end of file
diff --git a/services/api/webservice.py b/services/api/webservice.py
index c1a6009..09b73b8 100755
--- a/services/api/webservice.py
+++ b/services/api/webservice.py
@@ -29,4 +29,4 @@
-from configurations import services, traffic_dir, start_date, tick_length, flag_regex
+from configurations import services, traffic_dir, start_date, tick_length, flag_regex, pswd
 from pathlib import Path
 from data2req import convert_flow_to_http_requests, convert_single_http_requests
 from base64 import b64decode
@@ -37,10 +37,22 @@
 
 from flow2pwn import flow2pwn
 
+# lib for basic auth
+from flask_httpauth import HTTPBasicAuth
+from werkzeug.security import generate_password_hash, check_password_hash
+
 application = Flask(__name__)
 CORS(application)
 db = DB()
 
+# user and iniziliazation for basic auth
+users ={"tulip": generate_password_hash(pswd)}
+auth = HTTPBasicAuth()
+@auth.verify_password
+def verify_password(username, password):
+    if username in users and \
+            check_password_hash(users.get(username), password):
+        return username
 
 def return_json_response(object):
     return Response(json_util.dumps(object), mimetype='application/json')
@@ -49,10 +61,12 @@ def return_text_response(object):
 
 
 @application.route('/')
+@auth.login_required
 def hello_world():
     return 'Hello, World!'
 
 @application.route('/tick_info')
+@auth.login_required
 def getTickInfo():
     data = {
         "startDate": start_date,
@@ -64,43 +78,50 @@
 
 @application.route('/query', methods=['POST'])
+@auth.login_required
 def query():
     json = request.get_json()
     result = db.getFlowList(json)
     return return_json_response(result)
 
 @application.route('/tags')
+@auth.login_required
 def getTags():
     result = db.getTagList()
     return return_json_response(result)
 
 @application.route('/signature/<id>')
+@auth.login_required
 def signature(id):
     result = db.getSignature(int(id))
     return return_json_response(result)
 
 @application.route('/star/<flow_id>/<star_to_set>')
+@auth.login_required
 def setStar(flow_id, star_to_set):
     db.setStar(flow_id, star_to_set != "0")
     return "ok!"
 
 
 @application.route('/services')
+@auth.login_required
 def getServices():
     return return_json_response(services)


 @application.route('/flag_regex')
 def getFlagRegex():
     return return_json_response(flag_regex)


 @application.route('/flow/<id>')
+@auth.login_required
 def getFlowDetail(id):
     to_ret = return_json_response(db.getFlowDetail(id))
     return to_ret
 
 
 @application.route('/to_single_python_request', methods=['POST'])
+@auth.login_required
 def convertToSingleRequest():
     flow_id = request.args.get("id", "")
     if flow_id == "":
@@ -117,6 +138,7 @@ def convertToSingleRequest():
     return return_text_response(converted)
 
 @application.route('/to_python_request/<id>')
+@auth.login_required
 def convertToRequests(id):
     #TODO check flow null or what
     flow = db.getFlowDetail(id)
@@ -131,12 +153,14 @@ def convertToRequests(id):
     return return_text_response(converted)
 
 @application.route('/to_pwn/<id>')
+@auth.login_required
 def confertToPwn(id):
     flow = db.getFlowDetail(id)
     converted = flow2pwn(flow)
     return return_text_response(converted)
 
 @application.route('/download/')
+@auth.login_required
 def downloadFile():
     filepath = request.args.get('file')
     if filepath is None:

From 3fa701bccacfe5724de48b4adc964131a27be934 Mon Sep 17 00:00:00 2001
From: AlessandroMilani <alessandromilani2000@gmail.com>
Date: Fri, 5 May 2023 10:28:21 +0200
Subject: [PATCH 2/6] Removed access limit from docker compose

---
 docker-compose.yml | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/docker-compose.yml b/docker-compose.yml
index b3ffe58..6a9f897 100644
--- a/docker-compose.yml
+++ b/docker-compose.yml
@@ -30,15 +30,17 @@ services:
       dockerfile: Dockerfile-api
     image: tulip-api:latest
+     ports:
+      - "5000:5000"
     restart: unless-stopped
     depends_on:
       - mongo
     networks:
       - internal
     volumes:
-      - ${TRAFFIC_DIR_HOST}:${TRAFFIC_DIR_DOCKER}:ro
+      - ${TRAFFIC_DIR_HOST}:${TRAFFIC_DIR_DOCKER}
     environment:
       TULIP_MONGO: ${TULIP_MONGO}
       TULIP_TRAFFIC_DIR: ${TRAFFIC_DIR_DOCKER}
       FLAG_REGEX: ${FLAG_REGEX}
       TICK_START: ${TICK_START}
       TICK_LENGTH: ${TICK_LENGTH}
+      TULIP_PSWD: ${PSWD}

From 14cfd969f3f1586cd627fdb8e161ca3dcd6374cc Mon Sep 17 00:00:00 2001
From: AlessandroMilani <alessandromilani2000@gmail.com>
Date: Fri, 5 May 2023 10:29:58 +0200
Subject: [PATCH 3/6] New route for upload pcap file

---
 services/api/webservice.py | 16 ++++++++++++++++
 1 file changed, 16 insertions(+)

diff --git a/services/api/webservice.py b/services/api/webservice.py
index 09b73b8..139f2b5 100755
--- a/services/api/webservice.py
+++ b/services/api/webservice.py
@@ -40,6 +40,7 @@
 from werkzeug.security import generate_password_hash, check_password_hash
 
 application = Flask(__name__)
+application.config['MAX_CONTENT_LENGTH'] = 1 * 1024 * 1024 * 1024
 CORS(application)
 db = DB()
 
@@ -171,6 +172,21 @@ def downloadFile():
     except FileNotFoundError:
         return return_text_response("There was an error while downloading the requested file:\n{}: {}".format("Invalid 'file'", "'file' not found"))
 
+# API for uploading files
+# curl example: curl -F "file=@<path_to_file>" http://localhost:5000/upload -u tulip:<password>
+@application.route('/upload', methods=['POST'])
+@auth.login_required
+def uploadFile():
+    if 'file' not in request.files:
+        return return_text_response("There was an error while uploading the file:\n{}: {}".format("Invalid 'file'", "No 'file' given"))
+    file = request.files['file']
+    if file.filename == '':
+        return return_text_response("There was an error while uploading the file:\n{}: {}".format("Invalid 'file'", "No 'file' given"))
+    if file:
+        file.save(traffic_dir / file.filename)
+        return return_text_response("ok!")
+
+
 if __name__ == "__main__":
     application.run(host='0.0.0.0',threaded=True)
 

From ca58200dad5973fa99996e7649cab7a6756926c0 Mon Sep 17 00:00:00 2001
From: AlessandroMilani <57761908+AlessandroMIlani@users.noreply.github.com>
Date: Fri, 5 May 2023 10:46:23 +0200
Subject: [PATCH 4/6] Update README.md

---
 README.md | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/README.md b/README.md
index a892ded..c9ddc33 100755
--- a/README.md
+++ b/README.md
@@ -14,6 +14,8 @@ Tulip was developed by Team Europe for use in the first International Cyber Secu
 * Flow diffing
 * Time and size-based plots for correlation.
 * Linking HTTP sessions together based on cookies (Experimental, disabled by default)
+* Added a pcap update feature to the 'api' service 
+* Implemented "Basic Auth" authentication system
 
 ## Screenshots
 ![](./demo_images/demo1.png)

From c25a94faca3491890c6ee8d4698daf11438a7641 Mon Sep 17 00:00:00 2001
From: AlessandroMilani <57761908+AlessandroMIlani@users.noreply.github.com>
Date: Fri, 5 May 2023 10:50:41 +0200
Subject: [PATCH 5/6] Update README.md

---
 services/README.md | 3 +++
 1 file changed, 3 insertions(+)

diff --git a/services/README.md b/services/README.md
index 29279d3..c5e749f 100755
--- a/services/README.md
+++ b/services/README.md
@@ -62,3 +62,6 @@ convert the request to python syntax. Tokenize is used to toggle the auto-parsin
 
 ##### GET /to_pwn/(id)
 Convert the flow with the specified id in pwntools syntax
+
+##### POST /update 
+Accepts a file via a post call, designed to work with the following curl command: *curl -F "file=/path/to/file" http://$ip:5000/upload -u "tulip:$password"*

From ac145b05eb3aa30b92180369d2742666901afd5f Mon Sep 17 00:00:00 2001
From: AlessandroMilani <57761908+AlessandroMIlani@users.noreply.github.com>
Date: Fri, 5 May 2023 10:51:28 +0200
Subject: [PATCH 6/6] Update README.md

---
 services/README.md | 5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)

diff --git a/services/README.md b/services/README.md
index c5e749f..36b46d5 100755
--- a/services/README.md
+++ b/services/README.md
@@ -64,4 +64,7 @@ convert the request to python syntax. Tokenize is used to toggle the auto-parsin
 Convert the flow with the specified id in pwntools syntax
 
 ##### POST /update 
-Accepts a file via a post call, designed to work with the following curl command: *curl -F "file=/path/to/file" http://$ip:5000/upload -u "tulip:$password"*
+Accepts a file via a post call, designed to work with the following curl command: 
+```bash
+curl -F "file=/path/to/file" http://$ip:5000/upload -u "tulip:$password"
+```
